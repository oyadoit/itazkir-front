{"version":3,"sources":["context/auth.js","Components/Custom/GetStartedButton.jsx","Components/Custom/Particles/Circle.jsx","Components/Custom/Particles/Triangle.jsx","Components/Custom/Particles/Hexagon.jsx","Components/Custom/SubmitButton.jsx","Components/Custom/Header.jsx","utils/constants.js","Components/Custom/DownloadFromStore.jsx","Components/Containers/Homepage/MainContent.jsx","Components/Custom/FeatureCard.jsx","Components/Containers/Homepage/Features.jsx","Components/Custom/ReminderCard.jsx","Components/Containers/Homepage/RecentReminder.jsx","Components/Custom/Input.jsx","Components/Containers/Homepage/ContactUs.jsx","Components/Custom/Footer.jsx","Components/Pages/Homepage.jsx","Components/Custom/AlreadyHave.jsx","utils/helpers.js","graphql/mutation.js","utils/validation.js","Components/Containers/Login/LoginForm.jsx","Components/Pages/Login.jsx","Components/Containers/SignUp/SignUpForm.jsx","Components/Pages/Signup.jsx","Components/Custom/SubscriptionCard.jsx","Components/Containers/Subscription/SubscriptionFlow.jsx","Components/Pages/Subscription.jsx","Components/Custom/DashboardMenu.jsx","Components/Custom/SearchBar.jsx","Components/Custom/ProfilePreview.jsx","Components/Custom/SubscribeButton.jsx","graphql/query.js","Components/Custom/SmallSubscriptionCard.jsx","Components/Custom/SubscriptionPreview.jsx","Components/Custom/SmallReminderCard.jsx","Components/Pages/Dashboard/Dashboard.jsx","Components/Pages/Dashboard/Profile.jsx","Components/Pages/Dashboard/AllReminders.jsx","Components/Custom/UserCurrentSubscription.jsx","Components/Pages/Dashboard/Subscriptions.jsx","Components/Custom/AuthenticatedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","user","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","Button","className","to","children","Circle","width","color","height","top","right","left","bottom","Style","it","Triangle","Hexagon","SubmitButton","text","Header","authToken","localStorage","getItem","onClick","GetStartedButton","DownloadFromStore","src","imageUrl","alt","MainContent","FeatureCard","header","content","withButton","Features","icon","class","aria-hidden","ReminderCard","bgColor","title","firstButton","secondButton","thirdButton","RecentReminder","Input","placeholder","onChange","name","inputType","ContactUs","inputName","id","cols","rows","Footer","Homepage","AlreadyHave","linkText","errorMessage","args","message","error","config","duration","rtl","LOGIN","gql","CREATE_USER","SUBSCRIBE","signupConfig","email","isRequired","isEmail","password","isMinLength","length","firstName","lastName","loginConfig","saveUserData","token","setItem","LoginForm","useState","values","setValues","useMutation","onError","graphQLErrors","networkError","map","err","variables","Login","result","handleChange","e","target","data","console","log","tokenAuth","onSubmit","isValid","fields","errors","submitted","htmlFor","loader__container","loading","size","style","marginTop","SignUpForm","SignUp","labelValue","Signup","SubscriptionCard","SubscriptionFlow","Subscription","isLoggedIn","DashboardMenu","activeClassName","SearchBar","ProfilePreview","SubscribeButton","CURRENT_USER","ALL_REMINDERS","CURRENT_USER_SUBSCRIPTIONS","USER_CONTENTS","SmallSubscriptionCard","reminderId","update","proxy","readQuery","query","userSubscriptions","createSubscription","writeQuery","Subscribe","SubscriptionPreview","useQuery","allReminders","singleData","key","SmallReminderCard","tag","by","_","truncate","Dashboard","Profile","context","useContext","currentUser","AllReminders","userContents","eachContent","reminder","owner","UserCurrentSubscription","Subscriptions","eachSubscription","AuthenticatedRoute","Component","component","rest","render","pathname","from","location","App","exact","path","HomePage","AllSubscriptions","Boolean","window","hostname","match","link","HttpLink","uri","authLink","setContext","headers","authorization","client","ApolloClient","concat","cache","InMemoryCache","connectToDevTools","removeItem","resetStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.696b0a0a.chunk.js","sourcesContent":["import React, { useReducer, createContext } from 'react';\r\n\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    login: (userData) => {},\r\n    logout: () => {}\r\n})\r\n\r\nfunction authReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                user: null \r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n    const [state, dispatch] = useReducer(authReducer, {user: null});\r\n\r\n    const login = (userData) => {\r\n        dispatch({\r\n            type: 'LOGIN',\r\n            payload: userData\r\n        });\r\n    }\r\n\r\n    const logout = (userData) => {\r\n        dispatch({ type: 'LOGOUT' });\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{ user: state.user, login, logout}}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport {AuthContext, AuthProvider }","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Button = (props) => {\r\n    \r\n    return(\r\n    <>\r\n         <Link className={props.className} to={props.to}>{props.children}</Link>\r\n    </>\r\n)\r\n}\r\n\r\nButton.propTypes = {\r\n\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Style from 'style-it'\r\n\r\nconst Circle = ({width, color, height, top, right, left, bottom}) => {\r\n    return Style.it(`\r\n    .shapes {\r\n        width: ${width}px;\r\n        height: ${height}px;\r\n        background-color: ${color};\r\n        clip-path: circle(9.9% at 49% 50%);\r\n        position: absolute;\r\n        top: ${top}px;\r\n        left: ${left}px;\r\n        right: ${right}px;\r\n        bottom: ${bottom}px\r\n\r\n    }\r\n    `,\r\n    <div className='shapes'>\r\n            \r\n    </div>\r\n    ) \r\n}\r\n\r\nexport default Circle\r\n","import React from 'react';\r\nimport Style from 'style-it'\r\n\r\nconst Triangle = ({width, color, height, top, right, left, bottom}) => {\r\n    return Style.it(`\r\n    .shapes {\r\n        width: ${width}px;\r\n        height: ${height}px;\r\n        background-color: ${color};\r\n        clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\r\n        position: absolute;\r\n        top: ${top}px;\r\n        left: ${left}px;\r\n        right: ${right}px;\r\n        bottom: ${bottom}px\r\n\r\n    }\r\n    `,\r\n    <div className='shapes'>\r\n            \r\n    </div>\r\n    ) \r\n}\r\n\r\nexport default Triangle;\r\n","import React from 'react';\r\nimport Style from 'style-it'\r\n\r\nconst Hexagon = ({width, color, height, top, right, left, bottom}) => {\r\n    return Style.it(`\r\n    .shapes {\r\n        width: ${width}px;\r\n        height: ${height}px;\r\n        background-color: ${color};\r\n        clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);\r\n        position: absolute;\r\n        top: ${top}px;\r\n        left: ${left}px;\r\n        right: ${right}px;\r\n        bottom: ${bottom}px\r\n\r\n    }\r\n    `,\r\n    <div className='shapes'>\r\n            \r\n    </div>\r\n    ) \r\n}\r\n\r\nexport default Hexagon;\r\n","import React from 'react';\r\nimport Style from 'style-it';\r\n\r\n\r\nfunction SubmitButton({text}) {\r\n    return Style.it(`\r\n        .submit__button {\r\n            border: none;\r\n            padding: 10px;\r\n            border-radius: 2px;\r\n            background-color: #31DE28;\r\n            \r\n            color: #fff;\r\n            margin-top: 5px;\r\n        }\r\n        .submit__button:hover {\r\n            cursor: pointer;\r\n        }\r\n    `,\r\n    <div>\r\n        <button className='submit__button' type='submit'>{text}</button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Style from 'style-it';\r\nimport {  Link  } from 'react-router-dom';\r\nimport {Redirect } from 'react-router-dom'\r\n\r\nimport GetStartedButton from './GetStartedButton';\r\nimport Circle from '../Custom/Particles/Circle';\r\nimport Triangle from '../Custom/Particles/Triangle';\r\nimport Hexagon from '../Custom/Particles/Hexagon';\r\n\r\nimport Button from '../Custom/SubmitButton'\r\nimport { AUTH_TOKEN } from '../../utils/constants';\r\nimport { logout } from '../../index'\r\n\r\n\r\n\r\nconst Header = props => {\r\n\r\n    const authToken = localStorage.getItem(AUTH_TOKEN)\r\n    \r\n\r\n    return Style.it(\r\n        `\r\n        .profile__image {\r\n            border-radius: 50%;\r\n            width: 50px;\r\n            height: 50px;\r\n        }\r\n        li {\r\n            align-self: center;\r\n        }\r\n        .profile__image--container {\r\n            padding-left: 50px;\r\n        }\r\n        li {\r\n            display: block;\r\n            transition-duration: 0.5s;\r\n        }\r\n           \r\n        li:hover {\r\n            cursor: pointer;\r\n        }\r\n        \r\n        ul li ul {\r\n            visibility: hidden;\r\n            opacity: 0;\r\n            position: absolute;\r\n            transition: all 0.8s ease;\r\n            margin-top: .2rem;\r\n            right: 0;\r\n            margin-right: 4.2rem !important;\r\n            right: 10;\r\n            display: none;\r\n            background-color:  #fff;\r\n            border-radius: 3px;\r\n            border-width: 1px;\r\n            border-style: solid;\r\n            border-color: rgba(0, 0, 0, 0.05);\r\n            padding: 15px 50px 15px 15px;\r\n        }\r\n        ul li:hover > ul,\r\n        ul li ul:hover {\r\n            visibility: visible;\r\n            opacity: 1;\r\n            display: block;\r\n        }\r\n\r\n        ul li ul li {\r\n            clear: both;\r\n            width: 100%;\r\n            padding: 10px;\r\n        }\r\n        `,\r\n        \r\n    <div className='header'>\r\n        <div className=\"header__logo--container\">\r\n            <Link to='/'className='header__logo--icon' >iTazkir</Link>\r\n        </div> \r\n        <div className=\"nav__container\">\r\n            <ul> \r\n                {/* {\r\n                    props.isLoggedIn? (\r\n                        <>\r\n                           \r\n                            <li className='profile__image--container'>\r\n                                <Link to='/profile' className=\"\">\r\n                                    <img className='profile__image' src='https://avatars0.githubusercontent.com/u/8108337?s=460&v=4' alt=\"Reminder Owner\"/>\r\n                                </Link>\r\n                                <ul>\r\n                                    <li><Link to='/notifications'>Notifications</Link></li>\r\n                                    <li><Link to='/profile'>Profile</Link></li>\r\n                                    <li><Link to='/setting'>Setting</Link></li>\r\n                                    <li><Button text='Logout'/></li>\r\n                                </ul>\r\n                            </li>  \r\n                        </>\r\n                        \r\n                    ):( */}\r\n                        <>\r\n                            \r\n                            {\r\n                                authToken ? (\r\n                                <>\r\n                                    <li><Link to='/dashboard' className=\"nav__container--link\">Dashboard</Link></li>\r\n                                    <li><Link onClick={logout} \r\n                                        className=\"button__green\">Logout</Link>\r\n                                    </li>\r\n                                    \r\n                                </>\r\n                                ) : (\r\n                                    <>\r\n                                        <li><Link to='/login' className=\"nav__container--link\">Login</Link></li>\r\n                                        <li><GetStartedButton to='/signup' className='button__green'>Get Started</GetStartedButton></li>\r\n                                    </>                    \r\n                                )\r\n                            }\r\n                           \r\n                        </>\r\n                        \r\n                    {/* ) */}\r\n                {/* }                */}\r\n                \r\n            </ul>\r\n        </div>\r\n\r\n        <Circle color='#31DE28' width='20' height='20' top='10' left='105'/>\r\n        <Triangle color='pink' width='5' height='5' top='85' left='50'/>\r\n        <Hexagon color='orange' width='5' height='5' top='20' left='12'/>\r\n    </div>\r\n     \r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    \r\n}\r\n\r\nexport default Header;\r\n\r\n","export const AUTH_TOKEN = 'auth-token'","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst DownloadFromStore = props => {\r\n    return(\r\n\r\n        <Link to={props.to}>\r\n            <img width='140px' className={props.className} src={props.imageUrl} alt={props.alt}/>\r\n        </Link>\r\n    )\r\n}\r\n\r\nDownloadFromStore.propTypes = {\r\n\r\n}\r\n\r\nexport default DownloadFromStore;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nimport DownloadFromStore from '../../Custom/DownloadFromStore'\r\nimport GetStartedButton from '../../Custom/GetStartedButton';\r\nimport Circle from '../../Custom/Particles/Circle';\r\n// import Triangle from '../../Custom/Particles/Triangle';\r\nimport Hexagon from '../../Custom/Particles/Hexagon';\r\n\r\n\r\nconst MainContent = props => {\r\n    return (\r\n        <div className=\"main__content--container\">\r\n        <div className=\"main__content--left\">\r\n            <h1 className='main__content--large-text'>And remind, for indeed,  the reminder benefits the believers.</h1>\r\n            <h5 className='main__content--small-text'>Quran 51:55</h5>\r\n            <GetStartedButton to='/signup' className='button__green'>Get Started Now</GetStartedButton>\r\n            <div className='download__container'>\r\n                <DownloadFromStore \r\n                    imageUrl='https://res.cloudinary.com/dg7n6i9e1/image/upload/v1584607070/iTazkir/get_google_play_lmo8uc.png'\r\n                    className='download-from-store'\r\n                    alt='Download from android store'\r\n                />\r\n\r\n                <DownloadFromStore \r\n                    imageUrl='https://res.cloudinary.com/dg7n6i9e1/image/upload/v1584607077/iTazkir/download_app_store_kyq4uh.png'\r\n                    className='download-from-store'\r\n                    alt='Download from apple store'\r\n                />\r\n            </div>\r\n            {/* <Triangle color='#31DE28' width='15' height='15' top='390' left='400'/> */}\r\n            {/* <Circle color='#31DE28' width='20' height='20' top='170' left='305'/> */}\r\n            {/* <Triangle color='pink' width='5' height='5' top='195' left='300'/> */}\r\n            <Hexagon color='orange' width='5' height='5' top='150' left='252'/>\r\n            <img  src=\"https://res.cloudinary.com/dg7n6i9e1/image/upload/v1584830336/iTazkir/Path_172_qh8n8o.png\" alt=\"\"/>\r\n        </div>  \r\n        <div className=\"main__content--right\">\r\n            <img \r\n                src=\"https://res.cloudinary.com/dg7n6i9e1/image/upload/v1586108592/iTazkir/undraw_newsletter_vovu_twievt.png\" \r\n                alt=\"\"\r\n                className='main__content--image'\r\n            />\r\n        </div>     \r\n        \r\n    </div>\r\n\r\n    )  \r\n    \r\n}\r\n\r\nMainContent.propTypes = {\r\n\r\n}\r\n\r\nexport default MainContent\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Style from 'style-it';\r\n\r\nimport GetStartedButton from './GetStartedButton';\r\n\r\nconst FeatureCard = props => {\r\n    return Style.it(`\r\n        .card__container {\r\n            background-color: #fff;\r\n            max-width: 290px;\r\n            height: 320px;\r\n            padding:20px;\r\n            box-shadow: 0 19px 28px rgba(122, 120, 120, 0.062), 0 10px 10px rgba(122, 120, 120, 0.062);\r\n            display: flex;\r\n            flex-direction:column;\r\n            align-items: center;\r\n            justify-content: space-evenly;\r\n            align-content: center;\r\n            text-align: center;\r\n        }\r\n        .card__container:hover {\r\n            box-shadow: 0 19px 28px rgba(196, 188, 188, 0.068), 0 10px 10px rgba(0,0,0,0.22);\r\n            transition: .3s;\r\n        }\r\n        .fa {\r\n            font-size: 30px;\r\n            color: rgb(63, 61, 86);\r\n        }\r\n        .card__icon--container {\r\n            background-color: ${props.color};\r\n            padding: 10px 13px 10px 13px;\r\n            border-radius: 100px;\r\n\r\n\r\n        }\r\n        .card__text--header {\r\n            font-weight: bold;\r\n            font-size: 17px;\r\n        }\r\n        .card__text--content {\r\n            font-weight: 400;\r\n            font-size: 15px;\r\n        }\r\n    `,\r\n    <div className='card__container'>\r\n        <div className='card__icon--container'>\r\n            {props.children}\r\n        </div>\r\n        <div className='card__text--container'>\r\n            <p className='card__text--header'>{props.header}</p>\r\n            <p className='card__text--content'>{props.content}</p>\r\n        </div>\r\n        <div>\r\n            {\r\n                props.withButton ? (\r\n                    <GetStartedButton to='/signup' className='button__green'>Get Started</GetStartedButton>\r\n                ) : ('')\r\n            }\r\n            \r\n        </div>\r\n        \r\n\r\n    </div>\r\n    \r\n    ) \r\n}\r\n\r\nFeatureCard.propTypes = {\r\n\r\n}\r\n\r\nexport default FeatureCard\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Style from 'style-it'\r\n\r\n// components import\r\nimport FeatureCard from '../../Custom/FeatureCard';\r\nimport Circle from '../../Custom/Particles/Circle';\r\nimport Triangle from '../../Custom/Particles/Triangle';\r\nimport Hexagon from '../../Custom/Particles/Hexagon';\r\n\r\n\r\n\r\nconst Features = () => {\r\n    \r\n    return Style.it(`\r\n    @media only screen and (max-width: 396px) {\r\n        .features__container {\r\n            padding-left: 10px;\r\n            padding-right: 10px;\r\n        }\r\n        .card__container {\r\n            width: 250px !important;\r\n            height: 300px !important;\r\n        }\r\n    }\r\n    `,\r\n    <div className='features__container'>\r\n       <h1 className='features__heading'>How it works.</h1>\r\n       <div className='features__card--container'>\r\n            <FeatureCard \r\n                withButton header='Step 1' \r\n                content={'Create an iTazkir account to start receiving reminder'} \r\n                color={'#31DE28'}\r\n                icon={'fa-hourglass-start'}\r\n            > \r\n                <i class=\"fa fa-hourglass-start\" aria-hidden=\"true\"></i> \r\n            </FeatureCard>\r\n            <FeatureCard \r\n                header='Step 2' \r\n                content={'Pick from varieties of Reminder and subscribe to all of your choices'} \r\n                color={'pink'}\r\n                icon={'fa-check-circle-o'}\r\n            >\r\n                <i class=\"fa fa-check-circle-o\" aria-hidden=\"true\"></i>    \r\n            </FeatureCard> \r\n            <FeatureCard \r\n                header='Step 3' \r\n                content={'Relax and start receiving reminder your selected reminders'} \r\n                color={'orange'}\r\n            >\r\n                <i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i>    \r\n            </FeatureCard> \r\n\r\n            \r\n       </div>\r\n       <Circle color='#31DE28' width='20' height='20' top='10' left='105'/>\r\n       <Triangle color='pink' width='5' height='5' top='85' left='50'/>\r\n       <Hexagon color='orange' width='5' height='5' top='20' left='12'/>\r\n    </div>\r\n    )\r\n}\r\n\r\nFeatures.propTypes = {\r\n\r\n}\r\n\r\nexport default Features;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Style from 'style-it';\r\n\r\nimport GetStartedButton from '../Custom/GetStartedButton'\r\n\r\n\r\nconst ReminderCard = ({bgColor, title, imageUrl, content, firstButton, secondButton, thirdButton }) => {\r\n    return Style.it(`\r\n        .card__container {\r\n            background-color: ${bgColor};\r\n            width: 340px;\r\n            height: 210px;\r\n            border-radius: 2px;\r\n            display: flex;\r\n            padding: 20px;\r\n            \r\n        }\r\n        .card__content--right {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: space-evenly;\r\n            color: #fff !important;\r\n        }\r\n        .card__image {\r\n            border-radius: 50%;\r\n            width: 50px;\r\n            height: 50px;\r\n            margin-right: 30px;\r\n            margin-top:11px;\r\n        }\r\n        .card__text {\r\n            color: #fff;\r\n        }\r\n        .card__title {\r\n            font-size: 16px;\r\n            font-weight: bold;\r\n            color: #fff !important;\r\n            \r\n        }\r\n        @media only screen and (max-width: 356px) {\r\n            .card__container {\r\n                width: 270px !important;\r\n                padding: 8px;\r\n            }\r\n            .card__image {\r\n                margin-right: 10px;\r\n            }\r\n            .card__text{\r\n                margin-bottom: 0px;\r\n            }\r\n        }\r\n    `,\r\n        <div className='card__container'>\r\n            <div>\r\n                <img className='card__image' src={imageUrl} alt=\"Reminder Owner\"/>\r\n            </div>\r\n            <div className='card__content--right'>\r\n                <h2 className='card__title'>{title}</h2>\r\n                <p className='card__text'>{content}</p>\r\n                <div>\r\n                    <GetStartedButton \r\n                    className={firstButton? 'first-button' : (secondButton ? 'second-button' : 'third-button')}\r\n                    \r\n                    >\r\n                        View All\r\n                    </GetStartedButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nReminderCard.propTypes = {\r\n\r\n}\r\n\r\nexport default ReminderCard;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ReminderCard from '../../Custom/ReminderCard';\r\nimport GetStartedButton from '../../Custom/GetStartedButton';\r\n\r\nconst RecentReminder = props => {\r\n    return (\r\n    <div className='recent__reminder--container'>\r\n        <h1 className='recent__reminder--heading'> Recent Reminder</h1>\r\n        <div className='recent__reminder--cards'>\r\n            <ReminderCard \r\n                title='Islamic Reminder' \r\n                content=' Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam quos atque' \r\n                bgColor='rgb(109, 224, 103)'\r\n                firstButton\r\n                imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n            />\r\n            <ReminderCard \r\n                title='Islamic Reminder' \r\n                content=' Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam quos atque' \r\n                bgColor='rgb(238, 174, 56)'\r\n                secondButton\r\n                imageUrl='https://avatars0.githubusercontent.com/u/8108337?s=460&v=4'\r\n            />\r\n            <ReminderCard \r\n                title='Islamic Reminder' \r\n                content=' Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam quos atque' \r\n                bgColor='#2f679c'\r\n                thirdButton\r\n                imageUrl='https://avatars1.githubusercontent.com/u/1754873?s=460&v=4'\r\n            />\r\n        </div>\r\n        <h3 className='recent__reminder--text'>\r\n            Create an account to start receiving instant reminders you subscribe to\r\n        </h3>\r\n        <h3 className='recent__reminder--button'>            \r\n            <GetStartedButton to='signup' className='button__green recent__reminder--button'>Create Account now</GetStartedButton>  \r\n        </h3>\r\n    </div>\r\n    )\r\n}\r\n\r\nRecentReminder.propTypes = {\r\n\r\n}\r\n\r\nexport default RecentReminder;\r\n","import React from 'react';\r\nimport Style from 'style-it';\r\n\r\nfunction Input({placeholder, onChange, name, value,  inputType}) {\r\n\r\n\r\n    return Style.it(`\r\n        .input__container {\r\n            margin-bottom: 20px;\r\n            width: 100%;\r\n        }\r\n        .input__container:first-child {\r\n            margin-right: 10px;\r\n        }\r\n        .form__input {\r\n            border: none;\r\n            border-bottom: 1px solid rgba(49, 222, 40, 0.664);\r\n            padding: 8px;\r\n            padding-left: 2px;\r\n            width: 100%;\r\n            color: rgb(63, 61, 86);\r\n            // font-weight: bold;\r\n            letter-spacing: .8px;\r\n        }\r\n    `,\r\n    <div className='input__container'>\r\n        <input \r\n            className='form__input' \r\n            type={inputType} \r\n            value={value} \r\n            placeholder={placeholder} \r\n            name={name}\r\n            onChange={onChange}\r\n            />\r\n            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Style from 'style-it';\r\n\r\n// components\r\nimport Input from '../../Custom/Input';\r\nimport SubmitButton from '../../Custom/SubmitButton';\r\n\r\n\r\nconst ContactUs = props => {\r\n    return Style.it(`\r\n    .contact__us--container {\r\n        padding-right: 100px;\r\n        padding-top: 80px;\r\n        padding-left: 100px;\r\n        padding-bottom: 100px;\r\n        // display: flex;\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        back\r\n    }\r\n    .contact__us--grid-container {\r\n        display: grid;\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-gap: 50px;\r\n        padding-top: 60px;\r\n\r\n    }\r\n    .contact__us--image {\r\n        width: 90%;\r\n    }\r\n    .contact__us--form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 90%;\r\n    }\r\n    .contact__us--right {\r\n        margin: 90px;\r\n        margin-top: 30px;\r\n        margin-left: 0px;\r\n    }\r\n    .contact__us--textarea {\r\n        margin:  10px 0 30px 0;\r\n        border-radius: 2px;\r\n        border: 1px solid rgba(49, 222, 40, 0.664);\r\n        letter-spacing: .8px;\r\n        font-size: 15px;\r\n        padding: 8px;\r\n        padding-left: 2px;\r\n    }\r\n    .contact__us--heading {\r\n        font-size: 33px;\r\n        text-align: center;\r\n    }\r\n    `,\r\n        <div className='contact__us--container'>\r\n            <h1 className='contact__us--heading'>Get in touch with Us</h1>\r\n            <div className='contact__us--grid-container'>\r\n                <div className='contact__us--left'>\r\n                    <img \r\n                            src=\"https://res.cloudinary.com/dg7n6i9e1/image/upload/v1586108592/iTazkir/undraw_newsletter_vovu_twievt.png\" \r\n                            alt=\"\"\r\n                            className='contact__us--image'\r\n                    />\r\n                </div>\r\n                <div className='contact__us--right'>\r\n                    <form className='contact__us--form'>\r\n                        <Input \r\n                            inputName='name'\r\n                            inputType='text'\r\n                            placeholder='Enter your Name'\r\n                        />\r\n                        <Input \r\n                            inputName='email'\r\n                            inputType='email'\r\n                            placeholder='Enter your Email Address'\r\n                        />\r\n                        <textarea placeholder='Type your message here pls' className='contact__us--textarea' name=\"comment\" id=\"\" cols=\"15\" rows=\"3\"></textarea>\r\n\r\n                        <SubmitButton text='Send Message'/>\r\n                    </form>\r\n                </div>   \r\n            </div>       \r\n        </div>\r\n    )\r\n}\r\n\r\nContactUs.propTypes = {\r\n\r\n}\r\n\r\nexport default ContactUs;\r\n","// import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\n// const Footer = props => {\r\n//     return (\r\n//         <div className='footer__container'>\r\n//             This is the footer for crying out loud\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// Footer.propTypes = {\r\n\r\n// }\r\n\r\n// export default Footer\r\n\r\nimport React from 'react'\r\nimport Style from 'style-it';\r\n\r\n\r\nconst Footer = () => {\r\n    return Style.it(`\r\n    .footer__container{\r\n        background-color: #F0F0F0;\r\n        color: rgb(63, 61, 86);\r\n        font-size: 14px;\r\n        display: flex;\r\n        justify-content: space-evenly;\r\n        min-height: 8vh;\r\n        align-items: center;\r\n        padding-right: 250px;\r\n        padding-left: 250px;\r\n\r\n    }\r\n    `,\r\n\r\n        <div className=\"footer__container\">\r\n          <div>Email</div>\r\n          <div>Github</div>\r\n          <div>2020 iTazkir.</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Style from 'style-it';\r\n\r\nimport Header from '../Custom/Header';\r\nimport MainContent from '../Containers/Homepage/MainContent';\r\nimport Features from '../Containers/Homepage/Features';\r\nimport RecentReminder from '../Containers/Homepage/RecentReminder';\r\nimport ContactUs from '../Containers/Homepage/ContactUs';\r\nimport Footer from '../Custom/Footer';\r\n\r\n\r\nconst Homepage = props => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <MainContent /> \r\n            <Features /> \r\n            <RecentReminder /> \r\n            <ContactUs />\r\n            <Footer />\r\n        </div>\r\n)\r\n       \r\n    \r\n}\r\n\r\nHomepage.propTypes = {\r\n\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Style from 'style-it'\r\n\r\nfunction AlreadyHave({text, linkText, to}) {\r\n    return Style.it(`\r\n        \r\n    `,\r\n    <div className='already__container'>\r\n        <p className='already__text'>\r\n            {text}\r\n        </p>   \r\n        <Link className='already__link' to={to}>\r\n            {linkText}\r\n        </Link>\r\n    </div>\r\n    )\r\n        \r\n    \r\n}\r\n\r\nexport default AlreadyHave;\r\n","import { message, Button } from 'antd';\r\n\r\n//function from ant design to display error message\r\nexport const errorMessage = (args) => {\r\n    message.error(args);\r\n    message.config({\r\n        top: 200,\r\n        duration: 4,\r\n        rtl: false,\r\n        \r\n    })\r\n}","import gql from 'graphql-tag';\r\n\r\nexport const LOGIN = gql`\r\n  mutation tokenAuth(\r\n      $email: String!, \r\n      $password: String!, \r\n    ) {\r\n    tokenAuth(\r\n        email: $email, \r\n        password: $password, \r\n    )\r\n    {\r\n        token\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_USER = gql`\r\n  mutation createUser(\r\n      $firstName: String!, \r\n      $email: String!, \r\n      $password: String!, \r\n      $lastName: String!\r\n    ) {\r\n    createUser(\r\n        firstName: $firstName,\r\n        email: $email, \r\n        password: $password, \r\n        lastName:$lastName\r\n    ) {\r\n        user\r\n            {\r\n                id\r\n                firstName\r\n                lastName\r\n                email\r\n            }\r\n    }\r\n   \r\n  }\r\n`\r\n\r\n\r\nexport const VERIFY_TOKEN = gql`\r\n  mutation verifyToken( $token: String! ){\r\n    verifyToken(token: $token){\r\n      payload\r\n    }\r\n  }\r\n`\r\n\r\nexport const SUBSCRIBE = gql`\r\n  mutation createSubscription($reminderId: Int){\r\n    createSubscription(reminderId: $reminderId){\r\n      id\r\n      user{\r\n        id email\r\n      }\r\n      reminder{\r\n        name id owner{id email}\r\n      }\r\n    }\r\n  }\r\n`","export const signupConfig = {\r\n    email: {\r\n      isRequired: \"Email field is required!\",\r\n      isEmail: \"Enter a valid email\"\r\n    },\r\n    password: {\r\n      isRequired: \"Password field is required!\",\r\n      isMinLength: {\r\n        message: \"Password must be 8 character long\",\r\n        length: 8\r\n      }\r\n    },\r\n    firstName: {\r\n      isRequired: \"Enter your firstname\",\r\n    },\r\n    lastName: {\r\n      isRequired: \"Enter your lastname\",\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const  loginConfig = {\r\n  email: {\r\n    isRequired: \"Email field is required!\",\r\n    isEmail: \"Enter a valid email\"\r\n  },\r\n  password: {\r\n    isRequired: \"Password field is required!\",\r\n    isMinLength: {\r\n      message: \"Password must be 8 character long\",\r\n      length: 8\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Style from 'style-it';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Input from '../../Custom/Input';\r\nimport SubmitButton from '../../Custom/SubmitButton';\r\nimport AlreadyHave from '../../Custom/AlreadyHave';\r\nimport DownloadFromStore from '../../Custom/DownloadFromStore';\r\nimport { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router'\r\n\r\n// import { AuthContext } from '../../../context/auth';\r\n\r\nimport { Spin } from 'antd';\r\n\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport { AUTH_TOKEN } from '../../../utils/constants' \r\nimport {errorMessage} from '../../../utils/helpers'  //ant design error pop up\r\nimport { LOGIN } from '../../../graphql/mutation'   // login mutation\r\n\r\n\r\n// frontend form Validation\r\nimport { FormValidation } from \"calidation\";\r\nimport { loginConfig } from '../../../utils/validation';\r\n\r\n\r\nconst LoginForm = props => {\r\n    \r\n        const [values, setValues] = useState({\r\n            email: '',\r\n            password: ''\r\n        });\r\n\r\n        \r\n\r\n        const [Login, result] = useMutation(LOGIN, { \r\n            onError({graphQLErrors, networkError}){\r\n                if (graphQLErrors) graphQLErrors.map(err => {errorMessage(err.message)})  \r\n \r\n                if (networkError) errorMessage(\"You are not connected to the internet\");\r\n                \r\n            },\r\n\r\n            variables: values\r\n        });\r\n       \r\n\r\n\r\n\r\n        const handleSubmit = ({ isValid }) => { \r\n            if(isValid) {\r\n                Login();\r\n            }\r\n        }\r\n\r\n\r\n        const handleChange = (e) => {\r\n            setValues({\r\n                ...values,\r\n                [e.target.name]: e.target.value,\r\n            });\r\n        }\r\n    \r\n        // useEffect(() => {\r\n        //     if(result.data){\r\n        //         console.log(result.data)\r\n        //         const token  = result.data.tokenAuth.token\r\n        //         saveUserData(token)\r\n        //     }\r\n        //     if(AUTH_TOKEN){\r\n        //         return <Redirect to='/dashboard' />\r\n        //     }\r\n        //     else {\r\n        //         return <Redirect to='/login' />\r\n        //     }\r\n                       \r\n        // })\r\n\r\n        if (result.data) {\r\n\r\n            console.log(result.data)\r\n            const token  = result.data.tokenAuth.token\r\n            saveUserData(token)\r\n            if(AUTH_TOKEN){\r\n                return <Redirect to='/dashboard' />\r\n            }\r\n            else {\r\n                return <Redirect to='/login' />\r\n            }\r\n        }\r\n\r\n\r\n    return Style.it(`\r\n\r\n    .login__forget__password-row {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n    .reset__password-link {\r\n        color: #31DE28;\r\n    }\r\n    .login__image {\r\n        width: 99%;\r\n    }\r\n    \r\n    `,\r\n    <div className='signup__container'>\r\n        <div className='signup__image-left'>\r\n            <img \r\n                src=\"https://res.cloudinary.com/dg7n6i9e1/image/upload/v1584811416/iTazkir/login_ipiiei.png\" \r\n                alt=\"\"\r\n                className='login__image'\r\n            />\r\n        </div>\r\n        <div className='signup__form-right'>\r\n            <h1 className='signup__form-heading'>Welcome back to<span className='signup__green-text'> iTazkir</span></h1>\r\n            <FormValidation config={loginConfig} className='signup__form' onSubmit={handleSubmit} >\r\n                {({ fields, errors, submitted }) => (\r\n                    <>\r\n                        <div>\r\n                            <Input \r\n                                htmlFor='Email'\r\n                                name='email'\r\n                                inputType='email'\r\n                                value={values.email && fields.email}\r\n                                placeholder='Enter Email Address'\r\n                                onChange={handleChange}\r\n                            />\r\n                            {submitted && errors.email &&                             \r\n                                <div className=\"input__error\">\r\n                                    {errors.email}\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <Input \r\n                                htmlFor='Password'\r\n                                name='password'\r\n                                inputType='password'\r\n                                value={values.password && fields.password}\r\n                                placeholder='Enter Password'\r\n                                onChange={handleChange}\r\n                            />\r\n                            {submitted && errors.password &&                             \r\n                                <div className=\"input__error\">\r\n                                    {errors.password}\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        \r\n                \r\n                        <div className='login__forget__password-row'>\r\n                            <SubmitButton \r\n                                text='Login Here'\r\n                            />\r\n\r\n                            <div loader__container>\r\n                                {result.loading ? <Spin size=\"large\" /> : ('')}\r\n                            </div>\r\n\r\n                            <Link className='reset__password-link' to='/reset-password'>Forgot Password ?</Link>\r\n                        </div>\r\n                \r\n\r\n                        <AlreadyHave \r\n                            text='Dont have an Account?'\r\n                            linkText='Sign Up'\r\n                            to='/signup'\r\n                        />\r\n                    </>\r\n                )}\r\n            </FormValidation> \r\n            \r\n\r\n                \r\n            \r\n            <div className='download__container' style={{marginTop:'40px'}}>\r\n                <DownloadFromStore \r\n                    imageUrl='https://res.cloudinary.com/dg7n6i9e1/image/upload/v1584607070/iTazkir/get_google_play_lmo8uc.png'\r\n                    className='download-from-store'\r\n                    alt='Download from android store'\r\n                    to='#'\r\n                />\r\n\r\n                <DownloadFromStore \r\n                    imageUrl='https://res.cloudinary.com/dg7n6i9e1/image/upload/v1584607077/iTazkir/download_app_store_kyq4uh.png'\r\n                    className='download-from-store'\r\n                    alt='Download from apple store'\r\n                    to='#'\r\n                />\r\n\r\n       \r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst saveUserData = token => {\r\n    localStorage.setItem(AUTH_TOKEN, token)\r\n  }\r\n\r\n\r\nLoginForm.propTypes = {\r\n\r\n}\r\n\r\n\r\n\r\nexport default LoginForm;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Header from '../Custom/Header';\r\nimport LoginForm from '../Containers/Login/LoginForm';\r\n\r\nconst Login = props => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <LoginForm />\r\n        </>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n\r\n}\r\n\r\nexport default Login;   \r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router'\r\n\r\nimport Input from '../../Custom/Input';\r\nimport SubmitButton from '../../Custom/SubmitButton';\r\nimport AlreadyHave from '../../Custom/AlreadyHave';\r\n\r\nimport { Spin } from 'antd';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { FormValidation } from \"calidation\";\r\nimport {signupConfig} from '../../../utils/validation';\r\n\r\nimport { CREATE_USER } from '../../../graphql/mutation'\r\nimport { errorMessage } from '../../../utils/helpers'\r\n\r\n\r\n\r\n\r\nconst SignUpForm = props => {\r\n\r\n    const [values, setValues] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n    \r\n\r\n\r\n    const [SignUp, {loading, data}] = useMutation(CREATE_USER, {\r\n\r\n            onError({graphQLErrors, networkError}){\r\n                if (graphQLErrors) graphQLErrors.map(err => {errorMessage(err.message)})  \r\n \r\n                if (networkError) errorMessage(\"You are not connected to the internet\");\r\n            \r\n            },\r\n\r\n            variables: values,\r\n        \r\n    });\r\n\r\n\r\n    \r\n    \r\n    const handleSubmit = ({ isValid }) => {\r\n        if(isValid){\r\n            SignUp();\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    const handleChange = (e) => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    } \r\n      \r\n\r\n\r\n    if (data) {\r\n\r\n        // Redirect to dashboard page\r\n        return <Redirect to='/get-started' />\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='signup__container'>\r\n        <div className='signup__image-left'>\r\n            <img \r\n                src=\"https://res.cloudinary.com/dg7n6i9e1/image/upload/v1584798045/iTazkir/signup_yxdljr.png\" \r\n                alt=\"\"\r\n                className='sign__up--image'\r\n            />\r\n        </div>\r\n        \r\n        <div className='signup__form-right'>\r\n            <h1 className='signup__form-heading'>Create <span className='signup__green-text'> iTazkir </span>Account</h1>\r\n            <FormValidation config={signupConfig} className='signup__form'  onSubmit={handleSubmit}>\r\n                {({ fields, errors, submitted }) => (\r\n                    <>\r\n                        <div className=\"firstname__lastname-input-container\">\r\n                            <div>\r\n                                <Input \r\n                                    htmlFor='firstName'\r\n                                    labelValue='firstName'\r\n                                    name='firstName'\r\n                                    inputType='text'\r\n                                    value={values.firstName && fields.firstName}\r\n                                    placeholder='Enter First Name'\r\n                                    width='300'\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {submitted && errors.firstName &&                             \r\n                                    <div className=\"input__error\">\r\n                                        {errors.firstName}\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            <div>\r\n                                <Input \r\n                                    htmlFor='lastName'\r\n                                    labelValue='lastName'\r\n                                    name='lastName'\r\n                                    inputType='text'\r\n                                    value={values.lastName && fields.lastName}\r\n                                    placeholder='Enter Last Name'\r\n                                    width='300'\r\n                                    onChange={handleChange}\r\n                                /> \r\n                                {submitted && errors.lastName &&                             \r\n                                    <div className=\"input__error\">\r\n                                        {errors.lastName}\r\n                                    </div>\r\n                                 }\r\n                            </div>\r\n                \r\n                        </div>\r\n                        \r\n                        <Input \r\n                            htmlFor='Email'\r\n                            labelValue='Email'\r\n                            name='email'\r\n                            inputType='email'\r\n                            value={values.email && fields.email}\r\n                            placeholder='Enter Email Address'\r\n                            onChange={handleChange}\r\n                        />\r\n                        {submitted && errors.email &&\r\n                            <div className=\"input__error\">{errors.email}</div>\r\n                        }\r\n                        <Input \r\n                            htmlFor='Password'\r\n                            labelValue='Password'\r\n                            name='password'\r\n                            inputType='password'\r\n                            value={values.password && fields.password}\r\n                            placeholder='Enter Password'\r\n                            onChange={handleChange}\r\n                        />\r\n                        {submitted && errors.password &&\r\n                            <div className=\"input__error\">{errors.password}</div>\r\n                        }\r\n                    \r\n                        <div className='same__line'>\r\n                            <SubmitButton \r\n                                text='Create Account'                 \r\n                            />\r\n                            <div loader__container>\r\n                                {loading ? <Spin size=\"large\" /> : ('')}\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    \r\n\r\n                        <AlreadyHave \r\n                            text='Already have an Account?'\r\n                            linkText='Login'\r\n                            to='/login'\r\n                        />\r\n                </>\r\n                )}\r\n            </FormValidation> \r\n\r\n\r\n        </div>\r\n        \r\n        \r\n\r\n            \r\n\r\n        \r\n    </div>\r\n\r\n    )      \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nSignUpForm.propTypes = {\r\n\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Header from '../Custom/Header';\r\nimport SignUpForm from '../Containers/SignUp/SignUpForm';\r\n\r\nconst Signup = props => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <SignUpForm />\r\n        </div>\r\n    )\r\n}\r\n\r\nSignup.propTypes = {\r\n\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Style from 'style-it';\r\n\r\nimport SubscribeButton from '../Custom/SubmitButton';\r\n\r\n\r\nconst SubscriptionCard = ({bgColor, title, imageUrl, content, firstButton, secondButton, thirdButton }) => {\r\n    return Style.it(`\r\n        .card__container {\r\n            background-color: ${bgColor};\r\n            width: 340px;\r\n            height: 210px;\r\n            border-radius: 2px;\r\n            display: flex;\r\n            padding: 20px;\r\n            \r\n        }\r\n        .card__content--right {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: space-evenly;\r\n            color: #fff !important;\r\n        }\r\n        .card__image {\r\n            border-radius: 50%;\r\n            width: 50px;\r\n            height: 50px;\r\n            margin-right: 30px;\r\n            margin-top:11px;\r\n        }\r\n        .card__text {\r\n            color: #fff !important;\r\n        }\r\n        .card__title {\r\n            font-size: 16px;\r\n            font-weight: bold;\r\n            color: #fff !important;\r\n            \r\n        }\r\n    `,\r\n        <div className='card__container'>\r\n            <div>\r\n                <img className='card__image' src={imageUrl} alt=\"Reminder Owner\"/>\r\n            </div>\r\n            <div className='card__content--right'>\r\n                <h2 className='card__title'>{title}</h2>\r\n                <p className='card__text'>{content}</p>\r\n                <div>\r\n                    <SubscribeButton text='Subscribe'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSubscriptionCard.propTypes = {\r\n\r\n}\r\n\r\nexport default SubscriptionCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Style from 'style-it';\r\n\r\n\r\n// components\r\nimport SubscriptionCard from '../../Custom/SubscriptionCard';\r\nimport SubmitButton from '../../Custom/SubmitButton';\r\n\r\nconst SubscriptionFlow = () => {\r\n    return Style.it(`\r\n    \r\n    `,\r\n        <div className='subscription__flow--container'>\r\n            <h1 className='subscription__heading'>Stay updated with topics you care about the most</h1>\r\n            <h3 className='subscription__text'>Subscribe to your choice of reminder, <span className='unsubscribe__span'>Unsubscribe</span> at any time. </h3>\r\n            <div className='reminder__subscription--container'>\r\n                <SubscriptionCard \r\n                    title='Islamic Reminder' \r\n                    content=' Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam quos atque' \r\n                    bgColor='rgb(109, 224, 103)'\r\n                    firstButton\r\n                    imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n                />\r\n                <SubscriptionCard \r\n                    title='Islamic Reminder' \r\n                    content=' Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam quos atque' \r\n                    bgColor='rgb(109, 224, 103)'\r\n                    firstButton\r\n                    imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n                />\r\n                <SubscriptionCard \r\n                    title='Islamic Reminder' \r\n                    content=' Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam quos atque' \r\n                    bgColor='rgb(109, 224, 103)'\r\n                    firstButton\r\n                    imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n                />\r\n                <SubscriptionCard \r\n                    title='Islamic Reminder' \r\n                    content=' Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam quos atque' \r\n                    bgColor='rgb(109, 224, 103)'\r\n                    firstButton\r\n                    imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n                />\r\n                <SubscriptionCard \r\n                    title='Islamic Reminder' \r\n                    content=' Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam quos atque' \r\n                    bgColor='rgb(109, 224, 103)'\r\n                    firstButton\r\n                    imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n                />\r\n                <SubscriptionCard \r\n                    title='Islamic Reminder' \r\n                    content=' Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam quos atque' \r\n                    bgColor='rgb(109, 224, 103)'\r\n                    firstButton\r\n                    imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n                />\r\n                <SubscriptionCard \r\n                    title='Islamic Reminder' \r\n                    content=' Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam quos atque' \r\n                    bgColor='rgb(109, 224, 103)'\r\n                    firstButton\r\n                    imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n                />\r\n                \r\n            </div>\r\n\r\n            <SubmitButton  text='Save and Continue'/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nSubscriptionFlow.propTypes = {\r\n\r\n}\r\n\r\nexport default SubscriptionFlow;\r\n\r\n","import React from 'react';\r\n\r\n//components\r\nimport Header from '../Custom/Header';\r\nimport SubscriptionFlow from '../Containers/Subscription/SubscriptionFlow';\r\n\r\nconst Subscription = () => {\r\n    return (\r\n        <>\r\n          <Header isLoggedIn/>\r\n          <SubscriptionFlow />       {/* //get started section */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Subscription;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Style from \"style-it\";\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nimport { AUTH_TOKEN } from '../../utils/constants'\r\nimport {logout } from '../../index'\r\n\r\nconst DashboardMenu = (props) => {\r\n  \r\n  return Style.it(\r\n    `\r\n    .menu {\r\n          grid-column-start: 1;\r\n          // background-color: #343951;\r\n          color: white;\r\n          display: flex;\r\n          flex-direction: column;\r\n        }  \r\n        .brand {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: flex-start;\r\n          padding: 32px 32px 0 32px;\r\n          \r\n        }\r\n        .menu-list {\r\n          display: flex;\r\n          align-items: flex-start;\r\n          justify-content: center;\r\n          margin-top: 30px;\r\n        }\r\n        \r\n        .menu-list > ul {\r\n          list-style: none;\r\n          padding: 0;\r\n          width: 100%;\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n        \r\n        .menu-list > ul > li {\r\n          position: relative;\r\n        }\r\n        \r\n        .menu-list > ul > li > a {\r\n          height: 64px;\r\n          padding-left: 32px;\r\n          display: flex;\r\n          flex-direction: row;\r\n          align-items: center;\r\n          justify-content: flex-start;\r\n          text-decoration: none;\r\n          color: #818698 !important;\r\n        }\r\n        \r\n        .menu-list > ul > li > a.active::before {\r\n          height: 100%;\r\n          width: 5px;\r\n          content: \" \";\r\n          background: #31DE28;\r\n          border-top-right-radius: 5px;\r\n          border-bottom-right-radius: 5px;\r\n          position: absolute;\r\n          left: 0;\r\n        }\r\n        \r\n        .menu-icon {\r\n          height: 18px;\r\n          width: 18px;\r\n        }\r\n        \r\n        .menu-list > ul > li > a > span {\r\n          padding-left: 20px;\r\n          cursor: pointer;\r\n        }\r\n        \r\n        .menu-list > ul > li > a:hover {\r\n          color: white !important;\r\n          background-color: #31DE28;\r\n          transition: color 0.2s linear;\r\n        }\r\n        .menu-list > ul > li:last-child {\r\n            // margin-top: 240px;\r\n            margin-top: auto;\r\n        }\r\n    `,\r\n\r\n    <div className=\"menu\">\r\n      <div className=\"brand\">\r\n        <p><Link to='/'>iTazkir</Link></p>\r\n      </div>\r\n      <nav className=\"menu-list\">\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/dashboard\" >\r\n              <img\r\n                className=\"menu-icon\"\r\n                src=\"https://res.cloudinary.com/dg7n6i9e1/image/upload/v1586869762/iTazkir/home_doj6mg.svg\"\r\n                alt=\"home\"\r\n              />\r\n              <span>Home</span>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink activeClassName=\"active\" to=\"/dashboard/reminders\">\r\n              <img\r\n                className=\"menu-icon\"\r\n                src=\"https://res.cloudinary.com/dg7n6i9e1/image/upload/v1586869822/iTazkir/folder_iax9qu.svg\"\r\n                alt=\"folder\"\r\n              />\r\n              <span>All Reminders</span>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink activeClassName=\"active\" to=\"/dashboard/subscriptions\">\r\n              <img\r\n                className=\"menu-icon\"\r\n                src=\"https://res.cloudinary.com/dg7n6i9e1/image/upload/v1586869822/iTazkir/clock_h6lusg.svg\"\r\n                alt=\"clock\"\r\n              />\r\n              <span> Subscriptions</span>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink activeClassName=\"active\" to=\"/dashboard/profile\">\r\n              <img\r\n                className=\"menu-icon\"\r\n                src=\"https://res.cloudinary.com/dg7n6i9e1/image/upload/v1586869821/iTazkir/users_yve7dc.svg\"\r\n                alt=\"users\"\r\n              />\r\n              <span>Profile</span>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <a onClick={logout}>\r\n              <img\r\n                className=\"menu-icon\"\r\n                src=\"https://res.cloudinary.com/dg7n6i9e1/image/upload/v1586869999/iTazkir/alert-circle_wiywpu.svg\"\r\n                alt=\"alert\"\r\n              />\r\n              <span>\r\n                Logout\r\n              </span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboardMenu.propTypes = {};\r\n\r\nexport default DashboardMenu;\r\n","import React from 'react';\r\nimport Style from 'style-it'\r\n\r\nconst SearchBar = () => {\r\n  return Style.it(`\r\n   \r\n  `,\r\n    <>\r\n      <div className=\"search-bar\">\r\n          <img src=\"https://res.cloudinary.com/dg7n6i9e1/image/upload/v1586869822/iTazkir/search_ha0nmq.svg\" alt=\"search\" />\r\n          <input className=\"search-input\" placeholder=\"Search\" />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react'\r\nimport Style from 'style-it'\r\n\r\nconst ProfilePreview = () => {\r\n  return (\r\n       <div class=\"profile-preview\">\r\n          <div class=\"profile-preview-actions\">\r\n            <span class=\"profile-preview-text\">Welcome  </span>\r\n          </div>\r\n          <div class=\"profile-preview-info\">\r\n            <span class=\"profile-preview-text\">Imran Yaqub</span>\r\n            <img src=\"https://avatars0.githubusercontent.com/u/8108337?s=460&v=4\" class=\"profile-preview-info-photo\" />\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default ProfilePreview\r\n","import React from 'react';\r\nimport Style from 'style-it';\r\n\r\n\r\nfunction SubscribeButton(props) {\r\n    return Style.it(`\r\n        .submit__button {\r\n            border: none;\r\n            // padding: 8px 12px 8px 12px;\r\n            padding: 8px;\r\n            // border-radius: 50px;\r\n            border-radius: 3px;\r\n\r\n            background-color: #31DE28; \r\n            color: #fff;\r\n            // margin-top: 5px;\r\n        }\r\n        .submit__button:hover {\r\n            cursor: pointer;\r\n        }\r\n    `,\r\n        <button onClick={props.onClick} className='submit__button' type='submit'>{props.text}</button>\r\n    )\r\n}\r\n\r\nexport default SubscribeButton;\r\n","import gql from 'graphql-tag';\r\n\r\n//query the currrently loggedin user\r\nexport const CURRENT_USER = gql`\r\n   query {\r\n            currentUser{\r\n            id\r\n            lastLogin\r\n            email\r\n            firstName\r\n            lastName\r\n            isActive\r\n            phone        \r\n        }\r\n    }\r\n`\r\n\r\n//query all the reminders a user can subscribe to \r\nexport const ALL_REMINDERS = gql`\r\n   query{\r\n        allReminders {\r\n            name id \r\n        }\r\n    }\r\n`\r\n//query the currently logged in user's subscriptions\r\nexport const CURRENT_USER_SUBSCRIPTIONS = gql`\r\n    query {\r\n        userSubscriptions{\r\n            id\r\n            reminder{\r\n                id\r\n                name \r\n            }\r\n        }\r\n    }\r\n`\r\n//contents created for each of the user subscriptions\r\nexport const USER_CONTENTS = gql`\r\n    query {\r\n        userContents{\r\n \t        id title data reminder{\r\n                id name owner{\r\n                    id email firstName lastName\r\n                }\r\n            }\r\n    \t}\r\n    }\r\n`","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Style from 'style-it';\r\n\r\nimport SubscribeButton from '../Custom/SubscribeButton';\r\nimport { errorMessage } from '../../utils/helpers'\r\n\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { SUBSCRIBE } from '../../graphql/mutation'\r\nimport { CURRENT_USER_SUBSCRIPTIONS } from '../../graphql/query'\r\n\r\nconst SmallSubscriptionCard = ({imageUrl, title, id }) => {\r\n    const [Subscribe, {loading }] = useMutation(SUBSCRIBE, {\r\n        variables: { reminderId: id },\r\n        update(proxy, result) {\r\n            const data = proxy.readQuery({\r\n                query: CURRENT_USER_SUBSCRIPTIONS\r\n            });\r\n                 \r\n            data.userSubscriptions = [result.data.createSubscription, ...data.userSubscriptions ];\r\n            proxy.writeQuery({ query: CURRENT_USER_SUBSCRIPTIONS, data});\r\n        },\r\n        onError({graphQLErrors, networkError}){\r\n            if (graphQLErrors) graphQLErrors.map(err => {errorMessage('You can only subscribe once')})  \r\n\r\n            if (networkError) errorMessage(\"You are not connected to the internet\");\r\n            \r\n        },\r\n\r\n    })\r\n    // console.log(id)\r\n\r\n    // if(loading) return <p>loading..</p>\r\n    // if(data) console.log(data)\r\n\r\n    return Style.it(`\r\n        .card__image {\r\n            border-radius: 50%;\r\n            width: 50px;\r\n            height: 50px;\r\n            margin-right: 20px;\r\n        }\r\n        .card__text {\r\n            margin-bottom: 0px;\r\n        }\r\n        .card__title {\r\n            font-size: 14px;\r\n            font-weight: bold;\r\n            margin-bottom: 0px;\r\n            \r\n        }\r\n        .small__subscription__card--container {\r\n            display: flex;\r\n            padding: 20px;\r\n            justify-content: space-evenly;\r\n            align-items: center;\r\n            // box-shadow: rgba(3, 27, 78, 0.06) 0px 2px 4px;\r\n            box-shadow: 10px 10px 42px -35px rgba(0, 0, 0, 0.31);\r\n            margin-bottom: 20px;\r\n            border-radius: 3px;\r\n            background-color: #fff;\r\n\r\n        }\r\n        .title__content--container {\r\n            margin-right: 15px;\r\n        }\r\n    `,\r\n        <div className='small__subscription__card--container'>\r\n            <img className='card__image' src={imageUrl} alt=\"Reminder Owner\"/>\r\n            <div className='title__content--container'>\r\n                <h4 className='card__title'>{title}</h4>\r\n                {/* <p className='card__text'>{content}</p> */}\r\n            </div>\r\n            <SubscribeButton \r\n                text='Subscribe'\r\n                onClick={Subscribe}\r\n            />\r\n            \r\n        </div>\r\n             \r\n    )\r\n}\r\n\r\nSmallSubscriptionCard.propTypes = {\r\n\r\n}\r\n\r\nexport default SmallSubscriptionCard\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SmallSubscriptionCard from '../Custom/SmallSubscriptionCard';\r\nimport {useQuery } from '@apollo/react-hooks';\r\nimport { ALL_REMINDERS } from '../../graphql/query';\r\n\r\nconst SubscriptionPreview =  () => {\r\n    \r\n    const {loading, data } = useQuery(ALL_REMINDERS)\r\n\r\n    if(loading) return <p>loading..</p>\r\n    if(data) console.log(data)\r\n\r\n    return (        \r\n                <div>\r\n                    {\r\n                        data.allReminders.length > 0 ? (data.allReminders.map((singleData) => (\r\n                            <SmallSubscriptionCard \r\n                                imageUrl='https://avatars0.githubusercontent.com/u/8108337?s=460&v=4'\r\n                                title={singleData.name}\r\n                                id={singleData.id}\r\n                                key={singleData.id}\r\n                            />  \r\n                        )\r\n                        )) : (<h2>No Reminders available at the moment</h2>)\r\n                    }\r\n                </div>\r\n            )\r\n}\r\n\r\nSubscriptionPreview.propTypes = {\r\n\r\n}\r\n\r\nexport default SubscriptionPreview\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Style from 'style-it';\r\n\r\nimport _ from 'lodash'\r\n\r\nimport GetStartedButton from '../Custom/GetStartedButton'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst SmallReminderCard = ({bgColor, title, imageUrl, tag, by, content, firstButton, secondButton, thirdButton }) => {\r\n    return Style.it(`\r\n        .card__container {\r\n            background-color: ${bgColor};\r\n            width: 230px;\r\n            height: 155px;\r\n            margin-bottom: 10px;\r\n            display: flex;\r\n            padding: 18px 8px 10px 12px;\r\n            border-radius: 20px;\r\n            \r\n        }\r\n        .card__content--right {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: space-evenly;\r\n            // color: rgb(63, 61, 86); !important;\r\n        }\r\n        .card__image {\r\n            border-radius: 50%;\r\n            width: 35px;\r\n            height: 35px;\r\n            margin-right: 10px;\r\n            margin-top: 5px;\r\n        }\r\n        .card__text {\r\n            font-size: 12px;\r\n        }\r\n        .card__title {\r\n            font-size: 14px;\r\n            font-weight: bold;\r\n        }\r\n        .reminder__details-container {\r\n            \r\n        }\r\n        .reminder__name {\r\n            margin-bottom: 0px !important;\r\n            font-size: 10px;\r\n            color: #31DE28;\r\n        }\r\n        .reminder__owner {\r\n            margin-bottom: 0px !important;\r\n            font-size: 10px;\r\n            color: #31DE28;\r\n        }\r\n    `,\r\n        <div className='card__container'>\r\n            <div>\r\n                <img className='card__image' src={imageUrl} alt=\"Reminder Owner\"/>\r\n            </div>\r\n            <div className='card__content--right'>\r\n                <h2 className='card__title'>{_.truncate(title, {'length': 20, 'separator': ''})}</h2>\r\n                <p className='card__text'>{content}</p>\r\n                <div className='reminder__details-container'>\r\n                   <p className='reminder__name'>Tag: {tag}</p>\r\n                   <p className='reminder__owner'>By: {by}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSmallReminderCard.propTypes = {\r\n\r\n}\r\n\r\nexport default SmallReminderCard;\r\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Style from 'style-it';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport DashboardMenu from '../../Custom/DashboardMenu';\r\nimport SearchBar from '../../Custom/SearchBar';\r\nimport ProfilePreview from '../../Custom/ProfilePreview';\r\nimport SubscriptionPreview from '../../Custom/SubscriptionPreview';\r\nimport SmallReminderCard from '../../Custom/SmallReminderCard'\r\n\r\n\r\n\r\nconst Dashboard = props => {\r\n  \r\n\r\n    return Style.it(`\r\n    .dashboard__container {\r\n        display: grid;\r\n        grid-template-columns: 200px 1fr 315px;\r\n        grid-gap: 20px;\r\n        min-height: 100vh;\r\n        \r\n      }\r\n\r\n      \r\n      .content {\r\n        grid-column-start: 2;\r\n        background-color: #f5f6fb;\r\n        padding: 32px;\r\n      }\r\n      \r\n      .profile {\r\n        grid-column-start: 3;\r\n        background-color: #f5f6fb;\r\n      }     \r\n      .section-title {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n      }\r\n      \r\n      .section-actions > svg {\r\n        color: #a7aab9;\r\n      }\r\n      \r\n      .main-content {\r\n        margin-top: 20px;\r\n      }\r\n      \r\n      .section {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(240px, 1fr) );\r\n        grid-gap: 5px;\r\n      }\r\n      .same__row {\r\n        display:flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-bottom: 20px;\r\n      }       \r\n    `,\r\n    \r\n    <div className=\"dashboard__container\">\r\n     <DashboardMenu  />\r\n\r\n     <div class=\"content\">\r\n        <SearchBar />\r\n\r\n        <div class=\"main-content\">\r\n          <div className='same__row'>\r\n            <h1>Recent Reminders</h1>\r\n            <Link to='/dashboard/reminders'>View All</Link>\r\n          </div>\r\n          \r\n          <div class=\"section\">\r\n            <SmallReminderCard \r\n                title='Islamic Reminder' \r\n                content=' Lorem ipsum dolor sit amet,  elit. Totam quos atque' \r\n                bgColor='#fff'\r\n                secondButton\r\n                imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n            />\r\n\r\n            <SmallReminderCard \r\n                title='Islamic Reminder' \r\n                content=' Lorem ipsum dolor sit amet,  elit. Totam quos atque' \r\n                bgColor='#fff'\r\n                secondButton\r\n                imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n            />\r\n\r\n            <SmallReminderCard \r\n                title='Islamic Reminder' \r\n                content=' Lorem ipsum dolor sit amet,  elit. Totam quos atque' \r\n                bgColor='#fff'\r\n                secondButton\r\n                imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n            />\r\n             <SmallReminderCard \r\n                title='Islamic Reminder' \r\n                content=' Lorem ipsum dolor sit amet,  elit. Totam quos atque' \r\n                bgColor='#fff'\r\n                secondButton\r\n                imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n            />\r\n\r\n            <SmallReminderCard \r\n                title='Islamic Reminder' \r\n                content=' Lorem ipsum dolor sit amet,  elit. Totam quos atque' \r\n                bgColor='#fff'\r\n                secondButton\r\n                imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n            />\r\n\r\n            <SmallReminderCard \r\n                title='Islamic Reminder' \r\n                content=' Lorem ipsum dolor sit amet,  elit. Totam quos atque' \r\n                bgColor='#fff'\r\n                secondButton\r\n                imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n            />\r\n            \r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n     <div class=\"profile\">\r\n        <ProfilePreview />\r\n        \r\n        {/* <!-- New subscription should appear here for logged in user --> */}\r\n\r\n        <div class=\"subscription-container\">\r\n            <h2 class=\"subscription-title\">New Subscriptions </h2>\r\n            <SubscriptionPreview />  \r\n        </div>\r\n\r\n      </div>\r\n      \r\n    </div> \r\n\r\n  )\r\n}\r\n\r\nDashboard.propTypes = {\r\n\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, {useContext} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Style from 'style-it'\r\n\r\nimport DashboardMenu from '../../Custom/DashboardMenu';\r\n\r\n\r\nimport {AuthContext} from '../../../context/auth';\r\n\r\nimport { CURRENT_USER }  from  '../../../graphql/query';\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nconst Profile = props => {\r\n\r\n    const context = useContext(AuthContext)\r\n\r\n    const {loading, data } = useQuery(CURRENT_USER,{\r\n        update(){\r\n            context.login(data.currentUser)\r\n        }\r\n    })\r\n\r\n    if(loading) return <p>loading..</p>\r\n    if(data) console.log(data)\r\n\r\n    return Style.it(`\r\n        .profile__container {\r\n            display: grid;\r\n            grid-template-columns: 200px 1fr;\r\n            min-height: 100vh;\r\n        }\r\n        .profile__content--container {\r\n            background-color: #f5f6fb;\r\n            padding: 80px 100px 80px 100px;\r\n            margin-left: 20px;\r\n        }\r\n        .profile__image--container {\r\n            width: 200px;\r\n            height: 200px;\r\n            position: relative;\r\n        }\r\n        .profile__image {\r\n            width: 100%;\r\n        }\r\n        .image__name--row {\r\n            display: grid;\r\n            align-items: center;\r\n            grid-template-columns: repeat(auto-fit, minmax(10px, 1fr) );\r\n            text-aligh: center;\r\n            \r\n        }\r\n        .user__details {\r\n            padding: 50px 50px 50px 0px;\r\n        }\r\n        .card__summary--container {\r\n            margin-top: 50px;\r\n            display: grid;\r\n            // justify-content: space-between;\r\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr) );\r\n            grid-gap: 50px;\r\n        }\r\n        .card__summary {\r\n            background-color: #fff;\r\n            padding: 20px;\r\n            display: flex;\r\n            flex-direction: column;\r\n            \r\n        }\r\n    `,\r\n        \r\n        <div className='profile__container'>\r\n            <DashboardMenu />\r\n            <div className='profile__content--container'>\r\n                <div className='image__name--row'>\r\n                    <div className='profile__image--container'>\r\n                        <img className='profile__image' src=\"https://storage.googleapis.com/indie-hackers.appspot.com/avatars/XuNd60zUjvMskzW820ab9ecsr633\" alt=\"User Profile Image\"/>\r\n                    </div>\r\n                    <div className='user__details'>\r\n                        <h1>{data.currentUser.email}</h1>\r\n                        <h2>{data.currentUser.firstName } { data.currentUser.lastName}</h2>\r\n                        \r\n                    </div>  \r\n                </div>\r\n                <div className='card__summary--container'>\r\n                    <div className='card__summary'>\r\n                        <h2>Your Current Subscriptions</h2>\r\n                        <h1>23</h1>\r\n                    </div>\r\n                    <div className='card__summary'>\r\n                        <h2>Your Total Reminders</h2>\r\n                        <h1>123</h1>\r\n                    </div>\r\n                    <div className='card__summary'>\r\n                        <h2>Your Total Reminders</h2>\r\n                        <h1>123</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Style from 'style-it';\r\n\r\nimport DashboardMenu from '../../Custom/DashboardMenu'\r\nimport SmallReminderCard from '../../Custom/SmallReminderCard';\r\nimport SearchBar from '../../Custom/SearchBar';\r\nimport { USER_CONTENTS } from '../../../graphql/query';\r\n\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nconst AllReminders = props => {\r\n\r\n    const {loading, data } = useQuery(USER_CONTENTS)\r\n\r\n    if(loading) return <p>loading..</p>\r\n    if(data) console.log(data)\r\n\r\n    return Style.it(`\r\n        .all__reminders--page {\r\n            display: grid;\r\n            grid-template-columns: 200px 1fr;\r\n            grid-gap: 20px;\r\n            min-height: 100vh !important;\r\n        }\r\n        .all__reminders--container {\r\n            background-color: #f5f6fb;\r\n            padding: 30px;\r\n        }\r\n        .all__reminders--card-container {\r\n            display: grid;\r\n            grid-gap: 30px;\r\n            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr) );\r\n        }\r\n        .empty__content-message {\r\n            margin: auto !important;\r\n            margin-top: 100px !important;\r\n        }\r\n    `,\r\n        <div className='all__reminders--page'>\r\n            <DashboardMenu />\r\n            <div className='all__reminders--container'>\r\n                <h1>All Reminders</h1>\r\n                <SearchBar />\r\n                <div className='all__reminders--card-container'>\r\n                    {\r\n                        data.userContents && data.userContents.length > 0 ? data.userContents.map((eachContent) => (\r\n                                 <SmallReminderCard \r\n                                        title={eachContent.title} \r\n                                        content={eachContent.data}\r\n                                        bgColor='#fff'\r\n                                        tag={eachContent.reminder.name}\r\n                                        by={`${eachContent.reminder.owner.firstName}  ${eachContent.reminder.owner.lastName}`}\r\n                                        imageUrl='https://avatars0.githubusercontent.com/u/39632030?s=60&u=17bfe0a10b32f448983358ead04b14382726beca&v=4'\r\n                                        key={eachContent.id}\r\n                                    />\r\n                        )) : (\r\n                            <h2 className='empty__content-message'>\r\n                                No Reminders Available yet, subscribe to start receiving reminders\r\n                            </h2>\r\n                        )\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nAllReminders.propTypes = {\r\n\r\n}\r\n\r\nexport default AllReminders\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Style from 'style-it';\r\n\r\nimport SubscribeButton from './SubscribeButton';\r\n\r\nconst UserCurrentSubscription = ({imageUrl, title, content, }) => {\r\n    return Style.it(`\r\n        .card__image {\r\n            border-radius: 50%;\r\n            width: 50px;\r\n            height: 50px;\r\n            margin-right: 20px;\r\n        }\r\n        .card__text {\r\n            margin-bottom: 0px;\r\n        }\r\n        .card__title {\r\n            font-size: 14px;\r\n            font-weight: bold;\r\n            margin-bottom: 0px;\r\n            \r\n        }\r\n        .small__subscription__card--container {\r\n            display: flex;\r\n            padding: 20px;\r\n            justify-content: space-evenly;\r\n            align-items: center;\r\n            box-shadow: 10px 10px 42px -35px rgba(0, 0, 0, 0.31);\r\n            margin-bottom: 10px;\r\n            border-radius: 3px;\r\n            background-color: #fff;\r\n\r\n        }\r\n        .title__content--container {\r\n            margin-right: 15px;\r\n        }\r\n    `,\r\n        <div className='small__subscription__card--container'>\r\n            <img className='card__image' src={imageUrl} alt=\"Reminder Owner\"/>\r\n            <div className='title__content--container'>\r\n                <h4 className='card__title'>{title}</h4>\r\n                \r\n            </div>\r\n            <SubscribeButton text='Unsubscribe'/>\r\n            \r\n        </div>\r\n             \r\n    )\r\n}\r\n\r\nUserCurrentSubscription.propTypes = {\r\n\r\n}\r\n\r\nexport default UserCurrentSubscription\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Style from 'style-it'\r\n\r\nimport DashboardMenu from '../../Custom/DashboardMenu';\r\nimport SmallSubscriptionCard from '../../Custom/SmallSubscriptionCard';\r\nimport UserCurrentSubscription from '../../Custom/UserCurrentSubscription'\r\n\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { CURRENT_USER_SUBSCRIPTIONS } from '../../../graphql/query';\r\n// import { ALL_REMINDERS } from '../../../graphql/query';\r\nimport SubscriptionPreview from '../../Custom/SubscriptionPreview';\r\n\r\nconst Subscriptions = props => {\r\n\r\n    const {loading, data } = useQuery(CURRENT_USER_SUBSCRIPTIONS)\r\n    \r\n\r\n    if(loading) return <p>loading..</p>\r\n    if(data) console.log(data)\r\n\r\n    return Style.it(`\r\n        .subscriptions__container {\r\n            display: grid;\r\n            grid-template-columns: 200px 1fr 380px;\r\n            grid-gap: 20px;\r\n        }\r\n        .user__subscriptions--container {\r\n            background-color: #f5f6fb;\r\n            padding: 40px 30px 30px 30px;\r\n            display: flex;\r\n            flex-direction: column;  \r\n            min-height: 100vh !important;    \r\n        }\r\n\r\n        .new__subscriptions--container {\r\n            background-color: #f5f6fb;\r\n            padding: 40px 30px 30px 40px;\r\n            display: flex;\r\n            flex-direction: column;\r\n        }\r\n        .new__subscriptions--card-container {\r\n            padding: 20px 20px 40px 0px;\r\n        }\r\n        .user__current__subscriptions--card-container {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr) );\r\n            grid-gap: 30px;\r\n            padding-top: 20px;\r\n        }\r\n        .empty_message {\r\n            // text-align: center;\r\n            margin: auto;\r\n\r\n        }\r\n    `,\r\n        <div className='subscriptions__container'>\r\n            <DashboardMenu />\r\n            <div className='user__subscriptions--container'>\r\n                <h1>Your Subscriptions</h1>\r\n                <div className='user__current__subscriptions--card-container' >\r\n                    {\r\n                    \r\n                        data.userSubscriptions && data.userSubscriptions.length > 0 ? (data.userSubscriptions.map((eachSubscription) => (\r\n                            \r\n                                <UserCurrentSubscription \r\n                                    imageUrl='https://avatars0.githubusercontent.com/u/8108337?s=460&v=4'\r\n                                    title={eachSubscription.reminder.name}\r\n                                    key={eachSubscription.reminder.id}\r\n                                />\r\n                          \r\n                    \r\n                        ))) : (<h1 className='empty_message'>You have no subscriptions yet</h1>)\r\n                    }\r\n                </div>  \r\n            </div>\r\n            <div className='new__subscriptions--container'>\r\n                <h1>New Reminders</h1> \r\n                <div className='new__subscriptions--card-container'>\r\n                   <SubscriptionPreview />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSubscriptions.propTypes = {\r\n\r\n}\r\n\r\nexport default Subscriptions\r\n","import React from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AUTH_TOKEN } from '../../utils/constants';\r\n\r\nconst AuthenticatedRoute = ({ component: Component, ...rest}) => (\r\n    <Route\r\n        {...rest}\r\n            render={props => \r\n            localStorage.getItem(AUTH_TOKEN) ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/login\",\r\n                        state: {from: props.location}\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\nexport default AuthenticatedRoute;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport {AuthProvider} from './context/auth';\r\n\r\n\r\n\r\n// import { Button } from \"antd\";\r\n// import Header from \"./Components/Custom/Header\";\r\nimport HomePage from \"./Components/Pages/Homepage\";\r\nimport Login from \"./Components/Pages/Login\";\r\nimport Signup from \"./Components/Pages/Signup\";\r\nimport Footer from './Components/Custom/Footer';\r\nimport Subscription from './Components/Pages/Subscription';\r\nimport Dashboard from './Components/Pages/Dashboard/Dashboard';\r\nimport Profile from './Components/Pages/Dashboard/Profile';\r\nimport AllReminders from './Components/Pages/Dashboard/AllReminders';\r\nimport AllSubscriptions from './Components/Pages/Dashboard/Subscriptions';\r\nimport AuthenticatedRoute from './Components/Custom/AuthenticatedRoute';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  \r\n  return (\r\n    <AuthProvider>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} /> \r\n\r\n          <AuthProvider>\r\n            <AuthenticatedRoute exact path=\"/get-started\" component={Subscription} />   \r\n            <AuthenticatedRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <AuthenticatedRoute exact path=\"/dashboard/profile\" component={Profile} />\r\n            <AuthenticatedRoute exact path=\"/dashboard/reminders\" component={AllReminders} />\r\n            <AuthenticatedRoute exact path=\"/dashboard/subscriptions\" component={AllSubscriptions} />\r\n          </AuthProvider>\r\n        \r\n        </Switch>\r\n        {/* <Footer /> */}\r\n      </BrowserRouter>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport ApolloClient from 'apollo-client';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { setContext } from 'apollo-link-context'\r\n\r\nimport { AUTH_TOKEN } from './utils/constants';\r\n\r\nconst link =  new HttpLink({\r\n    uri: 'https://itazkir.herokuapp.com/graphql/'\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n    const token = localStorage.getItem(AUTH_TOKEN)\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: token ? `jwt ${token}` : ''\r\n      }\r\n    }\r\n  })\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(link),\r\n  cache: new InMemoryCache(),\r\n  connectToDevTools : true\r\n});\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(AUTH_TOKEN)\r\n  client.resetStore();\r\n}\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <ApolloProvider client={client}>\r\n        <App />\r\n    </ApolloProvider> , \r\n\r\n    document.getElementById('root')\r\n    \r\n);\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}